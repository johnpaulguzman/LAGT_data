belief network "unknown"
node keyid {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node dtype {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node vars {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node block {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node decl {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node varscop {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node constr {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node opaspr {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node arith {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node assgn {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node constl {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node logrel {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node exprn {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node ampas {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node sequen {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node itcpt {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node selcpt {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node fncs {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node pasaddr {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node fncpar {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node fncpro {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node nestit {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node multi {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node init {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node incdcr {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node countit {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node eventit {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node switch {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node fncdef {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node exitlp {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node return {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node break {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node conti {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node ifelse {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node callfnc {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node stdio {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node lrvalue {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node scanf {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node printf {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node ifseri {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node elseif {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node beflp {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node endlp {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node default {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
node prepost {
  type : discrete [ 2 ] = { "Known", "NotKnown" };
}
probability ( keyid | dtype, sequen ) {
  (0, 0) : 0.97101449, 0.02898551;
  (1, 0) : 0.8, 0.2;
  (0, 1) : 0.7777778, 0.2222222;
  (1, 1) : 0.0, 1.0;
}
probability ( dtype | arith, scanf ) {
  (0, 0) : 1.0, 0.0;
  (1, 0) : 0.91891892, 0.08108108;
  (0, 1) : 1.0, 0.0;
  (1, 1) : 0.2727273, 0.7272727;
}
probability ( vars | keyid, scanf ) {
  (0, 0) : 0.98639456, 0.01360544;
  (1, 0) : 0.5, 0.5;
  (0, 1) : 0.6, 0.4;
  (1, 1) : 0.2857143, 0.7142857;
}
probability ( block | arith, pasaddr, multi, switch ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.3333333, 0.6666667;
  (0, 1, 0, 0) : 0.8636364, 0.1363636;
  (1, 1, 0, 0) : 0.3333333, 0.6666667;
  (0, 0, 1, 0) : 0.5, 0.5;
  (1, 0, 1, 0) : 0.5, 0.5;
  (0, 1, 1, 0) : 0.5, 0.5;
  (1, 1, 1, 0) : 0.5, 0.5;
  (0, 0, 0, 1) : 0.3076923, 0.6923077;
  (1, 0, 0, 1) : 0.8571429, 0.1428571;
  (0, 1, 0, 1) : 0.5909091, 0.4090909;
  (1, 1, 0, 1) : 0.2307692, 0.7692308;
  (0, 0, 1, 1) : 0.5, 0.5;
  (1, 0, 1, 1) : 0.0, 1.0;
  (0, 1, 1, 1) : 0.0, 1.0;
  (1, 1, 1, 1) : 0.0, 1.0;
}
probability ( decl | vars, fncs, eventit, switch ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.0, 1.0;
  (0, 1, 0, 0) : 0.5, 0.5;
  (1, 1, 0, 0) : 0.5, 0.5;
  (0, 0, 1, 0) : 0.7, 0.3;
  (1, 0, 1, 0) : 0.0, 1.0;
  (0, 1, 1, 0) : 0.0, 1.0;
  (1, 1, 1, 0) : 0.5, 0.5;
  (0, 0, 0, 1) : 0.3809524, 0.6190476;
  (1, 0, 0, 1) : 0.5, 0.5;
  (0, 1, 0, 1) : 0.4666667, 0.5333333;
  (1, 1, 0, 1) : 0.5, 0.5;
  (0, 0, 1, 1) : 0.7307692, 0.2692308;
  (1, 0, 1, 1) : 0.0, 1.0;
  (0, 1, 1, 1) : 0.45, 0.55;
  (1, 1, 1, 1) : 0.0, 1.0;
}
probability ( varscop | switch, exitlp, printf ) {
  (0, 0, 0) : 0.96774194, 0.03225806;
  (1, 0, 0) : 0.7, 0.3;
  (0, 1, 0) : 0.5, 0.5;
  (1, 1, 0) : 0.7241379, 0.2758621;
  (0, 0, 1) : 1.0, 0.0;
  (1, 0, 1) : 0.25, 0.75;
  (0, 1, 1) : 0.5, 0.5;
  (1, 1, 1) : 0.2727273, 0.7272727;
}
probability ( constr | decl, sequen, init ) {
  (0, 0, 0) : 0.8205128, 0.1794872;
  (1, 0, 0) : 0.4782609, 0.5217391;
  (0, 1, 0) : 0.5, 0.5;
  (1, 1, 0) : 0.75, 0.25;
  (0, 0, 1) : 0.45, 0.55;
  (1, 0, 1) : 0.4090909, 0.5909091;
  (0, 1, 1) : 0.25, 0.75;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( opaspr | dtype, fncpar, break, callfnc ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 1.0, 0.0;
  (0, 1, 0, 0) : 0.5333333, 0.4666667;
  (1, 1, 0, 0) : 0.0, 1.0;
  (0, 0, 1, 0) : 0.5454545, 0.4545455;
  (1, 0, 1, 0) : 1.0, 0.0;
  (0, 1, 1, 0) : 0.6923077, 0.3076923;
  (1, 1, 1, 0) : 0.0, 1.0;
  (0, 0, 0, 1) : 0.6363636, 0.3636364;
  (1, 0, 0, 1) : 0.0, 1.0;
  (0, 1, 0, 1) : 0.3636364, 0.6363636;
  (1, 1, 0, 1) : 0.5, 0.5;
  (0, 0, 1, 1) : 0.5555556, 0.4444444;
  (1, 0, 1, 1) : 0.5, 0.5;
  (0, 1, 1, 1) : 0.6666667, 0.3333333;
  (1, 1, 1, 1) : 0.0, 1.0;
}
probability ( arith ) {
   0.7125749, 0.2874251;
}
probability ( assgn | dtype, exprn ) {
  (0, 0) : 0.8842975, 0.1157025;
  (1, 0) : 0.0, 1.0;
  (0, 1) : 0.5142857, 0.4857143;
  (1, 1) : 0.0, 1.0;
}
probability ( constl | itcpt, beflp ) {
  (0, 0) : 0.97468354, 0.02531646;
  (1, 0) : 1.0, 0.0;
  (0, 1) : 0.96428571, 0.03571429;
  (1, 1) : 0.7272727, 0.2727273;
}
probability ( logrel | assgn, exprn ) {
  (0, 0) : 0.95327103, 0.04672897;
  (1, 0) : 0.2, 0.8;
  (0, 1) : 0.7222222, 0.2777778;
  (1, 1) : 0.07407407, 0.92592593;
}
probability ( exprn | arith ) {
  (0) : 0.92436975, 0.07563025;
  (1) : 0.25, 0.75;
}
probability ( ampas | selcpt, fncpar, incdcr, endlp ) {
  (0, 0, 0, 0) : 0.94736842, 0.05263158;
  (1, 0, 0, 0) : 0.8, 0.2;
  (0, 1, 0, 0) : 0.8333333, 0.1666667;
  (1, 1, 0, 0) : 0.6666667, 0.3333333;
  (0, 0, 1, 0) : 0.0, 1.0;
  (1, 0, 1, 0) : 0.6666667, 0.3333333;
  (0, 1, 1, 0) : 0.5, 0.5;
  (1, 1, 1, 0) : 0.6, 0.4;
  (0, 0, 0, 1) : 0.6923077, 0.3076923;
  (1, 0, 0, 1) : 0.8, 0.2;
  (0, 1, 0, 1) : 0.8333333, 0.1666667;
  (1, 1, 0, 1) : 0.125, 0.875;
  (0, 0, 1, 1) : 0.4, 0.6;
  (1, 0, 1, 1) : 0.6666667, 0.3333333;
  (0, 1, 1, 1) : 0.4285714, 0.5714286;
  (1, 1, 1, 1) : 0.2105263, 0.7894737;
}
probability ( sequen | arith, logrel, elseif ) {
  (0, 0, 0) : 1.0, 0.0;
  (1, 0, 0) : 0.8666667, 0.1333333;
  (0, 1, 0) : 0.8461538, 0.1538462;
  (1, 1, 0) : 0.7142857, 0.2857143;
  (0, 0, 1) : 0.375, 0.625;
  (1, 0, 1) : 0.75, 0.25;
  (0, 1, 1) : 1.0, 0.0;
  (1, 1, 1) : 0.3333333, 0.6666667;
}
probability ( itcpt | keyid, exprn, ifelse ) {
  (0, 0, 0) : 0.7787611, 0.2212389;
  (1, 0, 0) : 0.5, 0.5;
  (0, 1, 0) : 0.4230769, 0.5769231;
  (1, 1, 0) : 1.0, 0.0;
  (0, 0, 1) : 0.1666667, 0.8333333;
  (1, 0, 1) : 1.0, 0.0;
  (0, 1, 1) : 0.1428571, 0.8571429;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( selcpt | constr, switch, beflp ) {
  (0, 0, 0) : 1.0, 0.0;
  (1, 0, 0) : 0.91666667, 0.08333333;
  (0, 1, 0) : 0.68, 0.32;
  (1, 1, 0) : 0.2105263, 0.7894737;
  (0, 0, 1) : 1.0, 0.0;
  (1, 0, 1) : 0.3333333, 0.6666667;
  (0, 1, 1) : 0.2352941, 0.7647059;
  (1, 1, 1) : 0.3870968, 0.6129032;
}
probability ( fncs | exprn, switch, ifelse ) {
  (0, 0, 0) : 0.95714286, 0.04285714;
  (1, 0, 0) : 0.5, 0.5;
  (0, 1, 0) : 0.5777778, 0.4222222;
  (1, 1, 0) : 0.6923077, 0.3076923;
  (0, 0, 1) : 1.0, 0.0;
  (1, 0, 1) : 0.5, 0.5;
  (0, 1, 1) : 0.5, 0.5;
  (1, 1, 1) : 0.1333333, 0.8666667;
}
probability ( pasaddr | fncpar, multi ) {
  (0, 0) : 0.6354167, 0.3645833;
  (1, 0) : 0.4615385, 0.5384615;
  (0, 1) : 0.3333333, 0.6666667;
  (1, 1) : 0.0, 1.0;
}
probability ( fncpar | fncs, switch, ifelse, default ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.3333333, 0.6666667;
  (0, 1, 0, 0) : 0.2222222, 0.7777778;
  (1, 1, 0, 0) : 0.75, 0.25;
  (0, 0, 1, 0) : 0.0, 1.0;
  (1, 0, 1, 0) : 0.5, 0.5;
  (0, 1, 1, 0) : 0.0, 1.0;
  (1, 1, 1, 0) : 0.75, 0.25;
  (0, 0, 0, 1) : 0.6666667, 0.3333333;
  (1, 0, 0, 1) : 0.0, 1.0;
  (0, 1, 0, 1) : 0.2692308, 0.7307692;
  (1, 1, 0, 1) : 0.6666667, 0.3333333;
  (0, 0, 1, 1) : 0.5, 0.5;
  (1, 0, 1, 1) : 0.5, 0.5;
  (0, 1, 1, 1) : 0.5, 0.5;
  (1, 1, 1, 1) : 0.0, 1.0;
}
probability ( fncpro | block, sequen, fncpar ) {
  (0, 0, 0) : 0.88, 0.12;
  (1, 0, 0) : 0.3636364, 0.6363636;
  (0, 1, 0) : 0.0, 1.0;
  (1, 1, 0) : 0.25, 0.75;
  (0, 0, 1) : 0.5, 0.5;
  (1, 0, 1) : 0.5, 0.5;
  (0, 1, 1) : 0.6666667, 0.3333333;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( nestit | sequen, fncpro, countit ) {
  (0, 0, 0) : 0.8266667, 0.1733333;
  (1, 0, 0) : 0.5, 0.5;
  (0, 1, 0) : 0.4583333, 0.5416667;
  (1, 1, 0) : 0.5, 0.5;
  (0, 0, 1) : 0.5, 0.5;
  (1, 0, 1) : 0.0, 1.0;
  (0, 1, 1) : 0.5, 0.5;
  (1, 1, 1) : 0.05882353, 0.94117647;
}
probability ( multi | exprn, sequen, elseif ) {
  (0, 0, 0) : 0.98165138, 0.01834862;
  (1, 0, 0) : 0.94444444, 0.05555556;
  (0, 1, 0) : 0.75, 0.25;
  (1, 1, 0) : 0.75, 0.25;
  (0, 0, 1) : 1.0, 0.0;
  (1, 0, 1) : 0.90909091, 0.09090909;
  (0, 1, 1) : 0.75, 0.25;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( init | fncpro, incdcr, fncdef, default ) {
  (0, 0, 0, 0) : 0.96610169, 0.03389831;
  (1, 0, 0, 0) : 0.25, 0.75;
  (0, 1, 0, 0) : 0.2, 0.8;
  (1, 1, 0, 0) : 0.5, 0.5;
  (0, 0, 1, 0) : 1.0, 0.0;
  (1, 0, 1, 0) : 0.5833333, 0.4166667;
  (0, 1, 1, 0) : 1.0, 0.0;
  (1, 1, 1, 0) : 0.5, 0.5;
  (0, 0, 0, 1) : 0.7142857, 0.2857143;
  (1, 0, 0, 1) : 1.0, 0.0;
  (0, 1, 0, 1) : 0.3333333, 0.6666667;
  (1, 1, 0, 1) : 0.4545455, 0.5454545;
  (0, 0, 1, 1) : 0.5714286, 0.4285714;
  (1, 0, 1, 1) : 0.375, 0.625;
  (0, 1, 1, 1) : 0.6666667, 0.3333333;
  (1, 1, 1, 1) : 0.1666667, 0.8333333;
}
probability ( incdcr | opaspr, itcpt, switch, default ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 1.0, 0.0;
  (0, 1, 0, 0) : 0.0, 1.0;
  (1, 1, 0, 0) : 1.0, 0.0;
  (0, 0, 1, 0) : 0.4, 0.6;
  (1, 0, 1, 0) : 1.0, 0.0;
  (0, 1, 1, 0) : 0.6923077, 0.3076923;
  (1, 1, 1, 0) : 0.0, 1.0;
  (0, 0, 0, 1) : 0.6, 0.4;
  (1, 0, 0, 1) : 0.4, 0.6;
  (0, 1, 0, 1) : 0.5, 0.5;
  (1, 1, 0, 1) : 1.0, 0.0;
  (0, 0, 1, 1) : 0.4615385, 0.5384615;
  (1, 0, 1, 1) : 0.6666667, 0.3333333;
  (0, 1, 1, 1) : 0.3333333, 0.6666667;
  (1, 1, 1, 1) : 0.1, 0.9;
}
probability ( countit | switch, callfnc, beflp, prepost ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.5, 0.5;
  (0, 1, 0, 0) : 0.0, 1.0;
  (1, 1, 0, 0) : 0.4666667, 0.5333333;
  (0, 0, 1, 0) : 0.0, 1.0;
  (1, 0, 1, 0) : 0.5555556, 0.4444444;
  (0, 1, 1, 0) : 1.0, 0.0;
  (1, 1, 1, 0) : 1.0, 0.0;
  (0, 0, 0, 1) : 0.8571429, 0.1428571;
  (1, 0, 0, 1) : 0.3636364, 0.6363636;
  (0, 1, 0, 1) : 0.5, 0.5;
  (1, 1, 0, 1) : 0.5, 0.5;
  (0, 0, 1, 1) : 0.25, 0.75;
  (1, 0, 1, 1) : 0.25, 0.75;
  (0, 1, 1, 1) : 1.0, 0.0;
  (1, 1, 1, 1) : 0.1578947, 0.8421053;
}
probability ( eventit | countit, switch, beflp, default ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.0, 1.0;
  (0, 1, 0, 0) : 0.125, 0.875;
  (1, 1, 0, 0) : 0.3, 0.7;
  (0, 0, 1, 0) : 0.0, 1.0;
  (1, 0, 1, 0) : 0.2, 0.8;
  (0, 1, 1, 0) : 0.5, 0.5;
  (1, 1, 1, 0) : 0.5555556, 0.4444444;
  (0, 0, 0, 1) : 0.8, 0.2;
  (1, 0, 0, 1) : 0.0, 1.0;
  (0, 1, 0, 1) : 0.4166667, 0.5833333;
  (1, 1, 0, 1) : 0.7857143, 0.2142857;
  (0, 0, 1, 1) : 0.0, 1.0;
  (1, 0, 1, 1) : 1.0, 0.0;
  (0, 1, 1, 1) : 0.625, 0.375;
  (1, 1, 1, 1) : 0.08695652, 0.91304348;
}
probability ( switch | assgn, logrel, itcpt ) {
  (0, 0, 0) : 0.8433735, 0.1566265;
  (1, 0, 0) : 0.0, 1.0;
  (0, 1, 0) : 0.0, 1.0;
  (1, 1, 0) : 0.05263158, 0.94736842;
  (0, 0, 1) : 0.125, 0.875;
  (1, 0, 1) : 0.0, 1.0;
  (0, 1, 1) : 0.0, 1.0;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( fncdef | opaspr, fncpro, switch ) {
  (0, 0, 0) : 0.96363636, 0.03636364;
  (1, 0, 0) : 0.6, 0.4;
  (0, 1, 0) : 0.4166667, 0.5833333;
  (1, 1, 0) : 1.0, 0.0;
  (0, 0, 1) : 0.6086957, 0.3913043;
  (1, 0, 1) : 0.5882353, 0.4117647;
  (0, 1, 1) : 0.483871, 0.516129;
  (1, 1, 1) : 0.0952381, 0.9047619;
}
probability ( exitlp | ampas, countit, eventit ) {
  (0, 0, 0) : 0.93220339, 0.06779661;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 0.3076923, 0.6923077;
  (1, 1, 0) : 0.7, 0.3;
  (0, 0, 1) : 0.7333333, 0.2666667;
  (1, 0, 1) : 0.4285714, 0.5714286;
  (0, 1, 1) : 0.6521739, 0.3478261;
  (1, 1, 1) : 0.2222222, 0.7777778;
}
probability ( return | opaspr, fncpro, break, lrvalue ) {
  (0, 0, 0, 0) : 0.8644068, 0.1355932;
  (1, 0, 0, 0) : 0.6666667, 0.3333333;
  (0, 1, 0, 0) : 0.4285714, 0.5714286;
  (1, 1, 0, 0) : 0.2857143, 0.7142857;
  (0, 0, 1, 0) : 0.3333333, 0.6666667;
  (1, 0, 1, 0) : 1.0, 0.0;
  (0, 1, 1, 0) : 0.09090909, 0.90909091;
  (1, 1, 1, 0) : 0.2, 0.8;
  (0, 0, 0, 1) : 0.2, 0.8;
  (1, 0, 0, 1) : 0.4, 0.6;
  (0, 1, 0, 1) : 0.6, 0.4;
  (1, 1, 0, 1) : 0.5, 0.5;
  (0, 0, 1, 1) : 0.8, 0.2;
  (1, 0, 1, 1) : 0.0, 1.0;
  (0, 1, 1, 1) : 0.125, 0.875;
  (1, 1, 1, 1) : 0.2, 0.8;
}
probability ( break | arith, multi, switch ) {
  (0, 0, 0) : 0.921875, 0.078125;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 1.0, 0.0;
  (1, 1, 0) : 0.5, 0.5;
  (0, 0, 1) : 0.3958333, 0.6041667;
  (1, 0, 1) : 0.7037037, 0.2962963;
  (0, 1, 1) : 0.0, 1.0;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( conti | sequen, fncdef, callfnc ) {
  (0, 0, 0) : 0.4320988, 0.5679012;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 0.375, 0.625;
  (1, 1, 0) : 1.0, 0.0;
  (0, 0, 1) : 0.5789474, 0.4210526;
  (1, 0, 1) : 0.6666667, 0.3333333;
  (0, 1, 1) : 0.1052632, 0.8947368;
  (1, 1, 1) : 0.6428571, 0.3571429;
}
probability ( ifelse | multi, ifseri, elseif ) {
  (0, 0, 0) : 0.95652174, 0.04347826;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 1.0, 0.0;
  (1, 1, 0) : 0.0, 1.0;
  (0, 0, 1) : 0.5, 0.5;
  (1, 0, 1) : 0.0, 1.0;
  (0, 1, 1) : 0.91666667, 0.08333333;
  (1, 1, 1) : 0.25, 0.75;
}
probability ( callfnc | keyid, fncpro, endlp ) {
  (0, 0, 0) : 1.0, 0.0;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 0.4583333, 0.5416667;
  (1, 1, 0) : 1.0, 0.0;
  (0, 0, 1) : 0.3928571, 0.6071429;
  (1, 0, 1) : 0.6666667, 0.3333333;
  (0, 1, 1) : 0.53125, 0.46875;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( stdio | incdcr, switch, endlp ) {
  (0, 0, 0) : 0.91525424, 0.08474576;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 0.2666667, 0.7333333;
  (1, 1, 0) : 0.4117647, 0.5882353;
  (0, 0, 1) : 0.7777778, 0.2222222;
  (1, 0, 1) : 0.0, 1.0;
  (0, 1, 1) : 0.7826087, 0.2173913;
  (1, 1, 1) : 0.4054054, 0.5945946;
}
probability ( lrvalue | selcpt, switch, callfnc ) {
  (0, 0, 0) : 0.98484848, 0.01515152;
  (1, 0, 0) : 1.0, 0.0;
  (0, 1, 0) : 0.4090909, 0.5909091;
  (1, 1, 0) : 0.4090909, 0.5909091;
  (0, 0, 1) : 1.0, 0.0;
  (1, 0, 1) : 0.0, 1.0;
  (0, 1, 1) : 0.8, 0.2;
  (1, 1, 1) : 0.4848485, 0.5151515;
}
probability ( scanf | exprn ) {
  (0) : 1.0, 0.0;
  (1) : 0.7333333, 0.2666667;
}
probability ( printf | exprn, selcpt, pasaddr ) {
  (0, 0, 0) : 1.0, 0.0;
  (1, 0, 0) : 0.7777778, 0.2222222;
  (0, 1, 0) : 1.0, 0.0;
  (1, 1, 0) : 0.4444444, 0.5555556;
  (0, 0, 1) : 0.8333333, 0.1666667;
  (1, 0, 1) : 1.0, 0.0;
  (0, 1, 1) : 1.0, 0.0;
  (1, 1, 1) : 0.3157895, 0.6842105;
}
probability ( ifseri | arith, assgn, elseif ) {
  (0, 0, 0) : 0.94791667, 0.05208333;
  (1, 0, 0) : 0.7058824, 0.2941176;
  (0, 1, 0) : 0.7, 0.3;
  (1, 1, 0) : 0.6666667, 0.3333333;
  (0, 0, 1) : 0.75, 0.25;
  (1, 0, 1) : 0.25, 0.75;
  (0, 1, 1) : 0.0, 1.0;
  (1, 1, 1) : 0.06666667, 0.93333333;
}
probability ( elseif | assgn, exprn ) {
  (0, 0) : 0.96261682, 0.03738318;
  (1, 0) : 0.6666667, 0.3333333;
  (0, 1) : 0.5555556, 0.4444444;
  (1, 1) : 0.4444444, 0.5555556;
}
probability ( beflp | block, fncpar, init, endlp ) {
  (0, 0, 0, 0) : 1.0, 0.0;
  (1, 0, 0, 0) : 0.6666667, 0.3333333;
  (0, 1, 0, 0) : 0.5, 0.5;
  (1, 1, 0, 0) : 0.0, 1.0;
  (0, 0, 1, 0) : 1.0, 0.0;
  (1, 0, 1, 0) : 0.2, 0.8;
  (0, 1, 1, 0) : 0.5, 0.5;
  (1, 1, 1, 0) : 0.6666667, 0.3333333;
  (0, 0, 0, 1) : 0.8, 0.2;
  (1, 0, 0, 1) : 0.4285714, 0.5714286;
  (0, 1, 0, 1) : 0.6666667, 0.3333333;
  (1, 1, 0, 1) : 0.5, 0.5;
  (0, 0, 1, 1) : 0.2857143, 0.7142857;
  (1, 0, 1, 1) : 0.75, 0.25;
  (0, 1, 1, 1) : 0.4, 0.6;
  (1, 1, 1, 1) : 0.05263158, 0.94736842;
}
probability ( endlp | arith, break, default ) {
  (0, 0, 0) : 0.90322581, 0.09677419;
  (1, 0, 0) : 0.4117647, 0.5882353;
  (0, 1, 0) : 0.5, 0.5;
  (1, 1, 0) : 0.1666667, 0.8333333;
  (0, 0, 1) : 0.6666667, 0.3333333;
  (1, 0, 1) : 0.6363636, 0.3636364;
  (0, 1, 1) : 0.2, 0.8;
  (1, 1, 1) : 0.0, 1.0;
}
probability ( default | exprn, switch, break ) {
  (0, 0, 0) : 0.95454545, 0.04545455;
  (1, 0, 0) : 0.25, 0.75;
  (0, 1, 0) : 0.3, 0.7;
  (1, 1, 0) : 0.5, 0.5;
  (0, 0, 1) : 0.0, 1.0;
  (1, 0, 1) : 0.5, 0.5;
  (0, 1, 1) : 0.483871, 0.516129;
  (1, 1, 1) : 0.2173913, 0.7826087;
}
probability ( prepost | pasaddr, incdcr, switch, fncdef ) {
  (0, 0, 0, 0) : 0.925, 0.075;
  (1, 0, 0, 0) : 1.0, 0.0;
  (0, 1, 0, 0) : 0.5, 0.5;
  (1, 1, 0, 0) : 0.3333333, 0.6666667;
  (0, 0, 1, 0) : 0.5714286, 0.4285714;
  (1, 0, 1, 0) : 0.5, 0.5;
  (0, 1, 1, 0) : 0.4, 0.6;
  (1, 1, 1, 0) : 0.4444444, 0.5555556;
  (0, 0, 0, 1) : 1.0, 0.0;
  (1, 0, 0, 1) : 0.2857143, 0.7142857;
  (0, 1, 0, 1) : 0.0, 1.0;
  (1, 1, 0, 1) : 0.0, 1.0;
  (0, 0, 1, 1) : 0.3333333, 0.6666667;
  (1, 0, 1, 1) : 0.5833333, 0.4166667;
  (0, 1, 1, 1) : 0.5454545, 0.4545455;
  (1, 1, 1, 1) : 0.05263158, 0.94736842;
}
